apiVersion: v1
kind: Namespace
metadata:
  name: my-app-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flask-app
  namespace: my-app-namespace

spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: my-flask-app

  template:
    metadata:
      labels:
        app.kubernetes.io/name: my-flask-app
    spec:
      containers:
      - name: flask-container
        image: miroshnikovm/my-flask-app:1.100
        ports:
        - name: http
          protocol: TCP
          containerPort: 8000
        env:
        - name: UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: AUTHOR
          value: "@mik"

        readinessProbe:
          httpGet:
            path: /readiness
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5

        resources:
          limits:
            cpu: 400m 
            memory: 256Mi 
          requests:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: my-flask-app-service
  namespace: my-app-namespace
spec:
  selector:
    app.kubernetes.io/name: my-flask-app
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
  type: ClusterIP

# Debug
---
apiVersion: v1
kind: Service
metadata:
  name: my-flask-app-service-debug
  namespace: my-app-namespace
spec:
  selector:
    app.kubernetes.io/name: my-flask-app
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
    nodePort: 30007
  type: NodePort
